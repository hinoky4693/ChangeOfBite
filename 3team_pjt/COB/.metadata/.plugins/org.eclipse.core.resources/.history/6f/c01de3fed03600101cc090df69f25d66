package com.ssafy.cob.domain.mealcalendar.service;


import java.io.File;
import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.ssafy.cob.domain.attachment.model.dto.FileDto;
import com.ssafy.cob.domain.mealcalendar.model.dao.MealCalendarDao;
import com.ssafy.cob.domain.mealcalendar.model.dto.MealCalendar;

@Service
public class MealCalendarServiceImpl implements MealCalendarService {

	private final MealCalendarDao mealCalendarDao;
	public MealCalendarServiceImpl(MealCalendarDao mealCalendarDao){
		this.mealCalendarDao = mealCalendarDao;
	}
	
	@Override
	public List<MealCalendar> getCalendar() {
		return mealCalendarDao.selectAll();
	}

	@Override
	public boolean registMeal(MealCalendar mealCalendar, List<MultipartFile> files) {
		if (mealCalendarDao.insertMeal(mealCalendar) > 0) return true;
		return false;
	}

	@Override
	public List<MealCalendar> getCalendarByDate(String date) {
		return mealCalendarDao.selectCalendarByDate(date);
	}

	@Override
	public boolean removeMeal(int id) {
		if (mealCalendarDao.deleteMeal(id) > 0) return true;
		return false;
	}

	@Override
	public boolean modifyMeal(MealCalendar mealCalendar) {
		if(mealCalendarDao.updateMeal(mealCalendar) > 0) return true;
		return false;
	}

	@Override
	public List<MealCalendar> getCalendarByUserId(int userId) {
		return mealCalendarDao.selectCalendarByUserId(userId);
	}
	
	@Override
	public void saveFiles(String relatedType, int relatedId, List<MultipartFile> files) {
	    if (files == null || files.isEmpty()) return;

	    for (MultipartFile file : files) {
	        if (!file.isEmpty()) {
	            try {
	                String uuid = UUID.randomUUID().toString();
	                String originalName = file.getOriginalFilename();
	                String extension = originalName.substring(originalName.lastIndexOf(".") + 1);
	                String savedFileName = uuid + "." + extension;

	                String fullPath = uploadPath + File.separator + savedFileName;
	                File dest = new File(fullPath);
	                dest.getParentFile().mkdirs();
	                file.transferTo(dest);

	                FileDto fileDto = new FileDto();
	                fileDto.setRelatedType(relatedType);
	                fileDto.setRelatedId(relatedId);

	                // ✅ 여기만 수정
	                // DB에는 브라우저에서 접근 가능한 URL로 저장해야 함
	                String urlPath = "/uploads/" + savedFileName;
	                fileDto.setFilePath(urlPath); // ✅ 이 부분이 핵심

	                fileDto.setOriginalName(originalName);
	                fileDto.setFileSize(file.getSize());
	                fileDto.setMimeType(file.getContentType());
	                fileDto.setFileExtension(extension);

	                fileDao.insertFile(fileDto);

	            } catch (Exception e) {
	                e.printStackTrace();
	            }
	        }
	    }
	}

}
